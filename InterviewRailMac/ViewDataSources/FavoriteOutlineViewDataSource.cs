// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Reactive.Linq;
using UI.Model;
using System.Collections.ObjectModel;
using DynamicData.Binding;

namespace UI.ViewDataSources
{
    public partial class FavoriteOutlineViewDataSource : NSOutlineViewDataSource
    {
        private readonly ReadOnlyObservableCollection<FavoriteStation> _stationData;

        public FavoriteOutlineViewDataSource(ReadOnlyObservableCollection<FavoriteStation> stationData, NSOutlineView outlineView)
        {
            _stationData = stationData;
            _stationData
                .ToObservableChangeSet()
                .Subscribe(_ => outlineView.ReloadData());
        }
        public override nint GetChildrenCount(NSOutlineView outlineView, NSObject item)
        {
            if (item == null)
            {
                return _stationData.Count;
            }
            else
            {
                var favoriteStation = item as FavoriteStation;
                if (favoriteStation != null)
                    return ((FavoriteStation)item).StationData.Count; //FavoriteStation
                else
                    return 1; //StationData
            }
        }

        public override NSObject GetChild(NSOutlineView outlineView, nint childIndex, NSObject item)
        {
            if (item == null)
            {
                return _stationData[(int)childIndex];
            }
            else
            {
                var favoriteStation = item as FavoriteStation;
                if (favoriteStation != null)
                    return favoriteStation.StationData[(int)childIndex];
                else
                    return (StationData)item;
            }
        }

        public override bool ItemExpandable(NSOutlineView outlineView, NSObject item)
        {
            var favoriteStation = item as FavoriteStation;
            return favoriteStation != null ? favoriteStation.StationData.Count > 0 ? true : false : false;
        }

    }
}
